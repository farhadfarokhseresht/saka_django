# Generated by Django 3.1 on 2021-07-16 22:31

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Analyte',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analyte_name', models.CharField(max_length=30)),
                ('department', models.TextField()),
                ('accdev', models.FloatField(db_column='AccDEV')),
                ('tea', models.FloatField(db_column='TEa')),
                ('unit', models.CharField(max_length=30)),
                ('up', models.IntegerField()),
                ('down', models.IntegerField()),
            ],
            options={
                'db_table': 'analyte',
            },
        ),
        migrations.CreateModel(
            name='Cash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('laboratoryid', models.IntegerField(db_column='laboratoryID')),
                ('analyteid', models.IntegerField(db_column='analyteID')),
                ('department', models.IntegerField()),
                ('date', models.DateField(blank=True, null=True)),
                ('kittype', models.IntegerField(blank=True, null=True)),
                ('testmethod', models.IntegerField(blank=True, null=True)),
                ('devicetype', models.IntegerField(blank=True, null=True)),
                ('latnumber', models.CharField(blank=True, max_length=300, null=True)),
                ('analytecv', models.FloatField(blank=True, db_column='analyteCV', null=True)),
                ('testresult', models.FloatField(blank=True, db_column='testResult', null=True)),
            ],
            options={
                'db_table': 'cash',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('devicename', models.CharField(max_length=50)),
                ('department', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'device',
            },
        ),
        migrations.CreateModel(
            name='Devicecompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('companyname', models.CharField(db_column='Companyname', max_length=50)),
                ('department', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'devicecompany',
            },
        ),
        migrations.CreateModel(
            name='Facttable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('laboratoryid', models.IntegerField(db_column='laboratoryID')),
                ('analyteid', models.IntegerField(db_column='analyteID')),
                ('department', models.IntegerField()),
                ('date', models.DateField()),
                ('kittype', models.IntegerField()),
                ('testmethod', models.IntegerField()),
                ('devicetype', models.IntegerField()),
                ('latnumber', models.CharField(max_length=300)),
                ('analytecv', models.FloatField(db_column='analyteCV')),
                ('testresult', models.FloatField(db_column='testResult')),
            ],
            options={
                'db_table': 'facttable',
            },
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('laboratoryid', models.IntegerField(db_column='laboratoryID')),
                ('analyteid', models.IntegerField(db_column='analyteID')),
                ('department', models.IntegerField()),
                ('date', models.DateField()),
                ('kittype', models.IntegerField()),
                ('testmethod', models.IntegerField()),
                ('devicetype', models.IntegerField()),
                ('latnumber', models.CharField(max_length=300)),
                ('analytecv', models.FloatField(db_column='analyteCV')),
                ('testresult', models.FloatField(db_column='testResult')),
                ('mean', models.FloatField(blank=True, db_column='Mean', null=True)),
                ('bias', models.FloatField(blank=True, db_column='Bias', null=True)),
                ('sd', models.FloatField(blank=True, db_column='SD', null=True)),
                ('adjmean', models.FloatField(blank=True, db_column='adjMean', null=True)),
                ('adjsd', models.FloatField(blank=True, db_column='adjSD', null=True)),
                ('cv', models.FloatField(blank=True, null=True)),
                ('dev', models.FloatField(blank=True, db_column='DEV', null=True)),
                ('sdi', models.FloatField(blank=True, db_column='SDI', null=True)),
                ('um', models.FloatField(blank=True, db_column='Um', null=True)),
                ('n', models.IntegerField(db_column='N')),
            ],
            options={
                'db_table': 'info',
            },
        ),
        migrations.CreateModel(
            name='InfoDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('laboratoryid', models.IntegerField(db_column='laboratoryID')),
                ('analyteid', models.IntegerField(db_column='analyteID')),
                ('department', models.IntegerField()),
                ('date', models.DateField()),
                ('kittype', models.IntegerField()),
                ('testmethod', models.IntegerField()),
                ('devicetype', models.IntegerField()),
                ('latnumber', models.CharField(max_length=300)),
                ('analytecv', models.FloatField(db_column='analyteCV')),
                ('testresult', models.FloatField(db_column='testResult')),
                ('mean', models.FloatField(blank=True, db_column='Mean', null=True)),
                ('bias', models.FloatField(blank=True, db_column='Bias', null=True)),
                ('sd', models.FloatField(blank=True, db_column='SD', null=True)),
                ('adjmean', models.FloatField(blank=True, db_column='adjMean', null=True)),
                ('adjsd', models.FloatField(blank=True, db_column='adjSD', null=True)),
                ('cv', models.FloatField(blank=True, null=True)),
                ('dev', models.FloatField(blank=True, db_column='DEV', null=True)),
                ('sdi', models.FloatField(blank=True, db_column='SDI', null=True)),
                ('um', models.FloatField(blank=True, db_column='Um', null=True)),
                ('n', models.IntegerField(db_column='N')),
            ],
            options={
                'db_table': 'info_device',
            },
        ),
        migrations.CreateModel(
            name='InfoTD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('laboratoryid', models.IntegerField(db_column='laboratoryID')),
                ('analyteid', models.IntegerField(db_column='analyteID')),
                ('department', models.IntegerField()),
                ('date', models.DateField()),
                ('kittype', models.IntegerField()),
                ('testmethod', models.IntegerField()),
                ('devicetype', models.IntegerField()),
                ('latnumber', models.CharField(max_length=300)),
                ('analytecv', models.FloatField(db_column='analyteCV')),
                ('testresult', models.FloatField(db_column='testResult')),
                ('mean', models.FloatField(blank=True, db_column='Mean', null=True)),
                ('bias', models.FloatField(blank=True, db_column='Bias', null=True)),
                ('sd', models.FloatField(blank=True, db_column='SD', null=True)),
                ('adjmean', models.FloatField(blank=True, db_column='adjMean', null=True)),
                ('adjsd', models.FloatField(blank=True, db_column='adjSD', null=True)),
                ('cv', models.FloatField(blank=True, null=True)),
                ('dev', models.FloatField(blank=True, db_column='DEV', null=True)),
                ('sdi', models.FloatField(blank=True, db_column='SDI', null=True)),
                ('um', models.FloatField(blank=True, db_column='Um', null=True)),
                ('n', models.IntegerField(db_column='N')),
            ],
            options={
                'db_table': 'info_t_d',
            },
        ),
        migrations.CreateModel(
            name='InfoTmethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('laboratoryid', models.IntegerField(db_column='laboratoryID')),
                ('analyteid', models.IntegerField(db_column='analyteID')),
                ('department', models.IntegerField()),
                ('date', models.DateField()),
                ('kittype', models.IntegerField()),
                ('testmethod', models.IntegerField()),
                ('devicetype', models.IntegerField()),
                ('latnumber', models.CharField(max_length=300)),
                ('analytecv', models.FloatField(db_column='analyteCV')),
                ('testresult', models.FloatField(db_column='testResult')),
                ('mean', models.FloatField(blank=True, db_column='Mean', null=True)),
                ('bias', models.FloatField(blank=True, db_column='Bias', null=True)),
                ('sd', models.FloatField(blank=True, db_column='SD', null=True)),
                ('adjmean', models.FloatField(blank=True, db_column='adjMean', null=True)),
                ('adjsd', models.FloatField(blank=True, db_column='adjSD', null=True)),
                ('cv', models.FloatField(blank=True, null=True)),
                ('dev', models.FloatField(blank=True, db_column='DEV', null=True)),
                ('sdi', models.FloatField(blank=True, db_column='SDI', null=True)),
                ('um', models.FloatField(blank=True, db_column='Um', null=True)),
                ('n', models.IntegerField(db_column='N')),
            ],
            options={
                'db_table': 'info_tmethod',
            },
        ),
        migrations.CreateModel(
            name='Laboratory',
            fields=[
                ('lab_id', models.AutoField(primary_key=True, serialize=False)),
                ('laboratory_name', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=30)),
                ('pass_field', models.CharField(db_column='pass', max_length=32)),
                ('role', models.CharField(max_length=50)),
                ('phnuber', models.CharField(max_length=12)),
                ('email', models.CharField(max_length=255)),
                ('province', models.CharField(db_column='Province', max_length=300)),
                ('city', models.CharField(db_column='City', max_length=300)),
            ],
            options={
                'db_table': 'laboratory',
            },
        ),
        migrations.CreateModel(
            name='Latnumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latnumber', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'latnumber',
            },
        ),
        migrations.CreateModel(
            name='Loc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form', models.IntegerField()),
                ('labid', models.IntegerField()),
                ('loc', models.IntegerField()),
            ],
            options={
                'db_table': 'loc',
            },
        ),
        migrations.CreateModel(
            name='Singup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('phonenumber', models.CharField(max_length=12)),
                ('email', models.CharField(max_length=50)),
                ('province', models.CharField(db_column='Province', max_length=50)),
                ('city', models.CharField(db_column='City', max_length=50)),
            ],
            options={
                'db_table': 'singup',
            },
        ),
        migrations.CreateModel(
            name='Tmethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('methodname', models.CharField(max_length=50)),
                ('analytename', models.CharField(max_length=50)),
                ('department', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'tmethod',
            },
        ),
    ]
